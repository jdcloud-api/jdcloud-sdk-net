/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */


using System;
using System.Collections.Generic;
using System.Text;


namespace JDCloudSDK.Lb.Model
{

    /// <summary>
    /// backend
    /// </summary>
    public class Backend
    {

        ///<summary>
        ///后端服务的Id
        ///</summary>
        public string BackendId{ get; set; }
        ///<summary>
        ///后端服务的名字
        ///</summary>
        public string BackendName{ get; set; }
        ///<summary>
        ///后端服务所属loadBalancer的Id
        ///</summary>
        public string LoadBalancerId{ get; set; }
        ///<summary>
        ///后端服务的协议【alb】包括Http，Tcp【nlb】包括Tcp
        ///</summary>
        public string Protocol{ get; set; }
        ///<summary>
        ///后端服务的端口，取值范围为[1, 65535]
        ///</summary>
        public double? Port{ get; set; }
        ///<summary>
        ///调度算法, 取值为IpHash, RoundRobin, LeastConn，默认为RoundRobin
        ///</summary>
        public string Algorithm{ get; set; }
        ///<summary>
        ///服务器组的Id列表，目前只支持一个，且与agIds不能同时存在
        ///</summary>
        public List<string> TargetGroupIds{ get; set; }
        ///<summary>
        ///可用性组的Id列表，目前只支持一个，且与targetGroupIds不能同时存在
        ///</summary>
        public List<string> AgIds{ get; set; }
        ///<summary>
        ///【alb tcp协议】通过Proxy Protocol协议获取真实ip, 取值为False(不获取)或者True(获取,支持v1版本)
        ///</summary>
        public bool ProxyProtocol{ get; set; }
        ///<summary>
        ///后端服务的描述信息
        ///</summary>
        public string Description{ get; set; }
        ///<summary>
        ///【nlb】移除target前连接的最大保持时间，范围[1，3600]
        ///</summary>
        public double? ConnectionDrainingSeconds{ get; set; }
        ///<summary>
        ///后端服务的后端保持, 取值为False(不开启)或者True(开启)，默认为False
        ///</summary>
        public bool SessionStickiness{ get; set; }
        ///<summary>
        ///【nlb】后端服务会话保持方式, 取值范围：[srcIp、srcIp_protocol、srcIp_pro_port]
        ///</summary>
        public string SessionStickyType{ get; set; }
        ///<summary>
        ///【alb http协议】cookie的过期时间
        ///</summary>
        public double? HttpCookieExpireSeconds{ get; set; }
        ///<summary>
        ///【alb http协议】获取负载均衡的协议, 取值为False(不获取)或True(获取)
        ///</summary>
        public bool HttpForwardedProtocol{ get; set; }
        ///<summary>
        ///【alb http协议】获取负载均衡的端口, 取值为False(不获取)或True(获取)
        ///</summary>
        public bool HttpForwardedPort{ get; set; }
        ///<summary>
        ///【alb http协议】获取负载均衡的host信息, 取值为False(不获取)或True(获取)
        ///</summary>
        public bool HttpForwardedHost{ get; set; }
        ///<summary>
        ///【alb http协议】获取负载均衡的vip, 取值为False(不获取)或True(获取)
        ///</summary>
        public bool HttpForwardedVip{ get; set; }
        ///<summary>
        ///Target列表
        ///</summary>
        public Object HealthCheck{ get; set; }
        ///<summary>
        ///后端服务的创建时间
        ///</summary>
        public string CreatedTime{ get; set; }
    }
}
