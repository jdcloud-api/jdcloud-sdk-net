/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * JDCLOUD 应用安全网关 API文档
 * 提供应用安全网关攻击事件统计、WAF实例管理、防护配置管理等相关接口
 *
 * OpenAPI spec version: v1
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */


using JDCloudSDK.Core.Auth;
using JDCloudSDK.Core.Client;
using JDCloudSDK.Core.Http;
using JDCloudSDK.Vpcwaf.Apis;
using JDCloudSDK.Vpcwaf.Model;
using System;
using System.Collections.Generic;
using System.Text;
#if NET40||NET35
#else
using System.Threading.Tasks;
#endif

namespace JDCloudSDK.Vpcwaf.Client
{
    /// <summary>
    /// JDCLOUD 应用安全网关 API文档
    /// 提供应用安全网关攻击事件统计、WAF实例管理、防护配置管理等相关接口
    /// Vpcwaf Api 客户端
    ///</summary>
    public class VpcwafClient : JdcloudClient
    {

        /// <summary>
        ///  默认私有构造函数
        /// </summary>
        private VpcwafClient()
        {

        }

        /// <summary>
        /// 默认构造函数
        /// </summary>
        /// <param name="credentialsProvider">认证信息</param>
        /// <param name="httpRequestConfig">http 客户端配置信息</param>
        /// <param name="environment">sdk 环境配置信息</param>
        public VpcwafClient(CredentialsProvider credentialsProvider, HttpRequestConfig httpRequestConfig,SDKEnvironment environment)
        {
            this.httpRequestConfig = httpRequestConfig;
            this.credentialsProvider = credentialsProvider;
            this.environment = environment;
        }

        /// <summary>
        /// 默认构造函数
        /// </summary>
        /// <param name="httpRequestConfig">http 客户端配置信息</param>
        /// <param name="credentialsProvider">认证信息</param>
        public VpcwafClient(CredentialsProvider credentialsProvider,HttpRequestConfig httpRequestConfig)
        {
            this.httpRequestConfig = httpRequestConfig;
            this.credentialsProvider = credentialsProvider;
        }

        /// <summary>
        /// 默认构造函数，
        /// 注意如果使用此方法 httpRequestConfig 使用的http 请求 schema 为Https
        /// </summary>
        /// <param name="credentialsProvider">认证信息</param>
        public VpcwafClient(CredentialsProvider credentialsProvider)
        {
            this.credentialsProvider = credentialsProvider;
        }

        /// <summary>
        ///  版本号 1.0.1
        ///</summary>
        public const string ClientVersion = "1.0.1";

        private const string apiVersion = "v1";
        private const string userAgentPrefix = "JdcloudSdkDotNet";
        private const string defaultEndpoint = "vpcwaf.jdcloud-api.com";
        private const string serviceName = "vpcwaf";
        private const string userAgent = userAgentPrefix + "/" + ClientVersion + " " + serviceName + "/" + apiVersion;


        private SDKEnvironment environment = new SDKEnvironment(defaultEndpoint);
        private CredentialsProvider credentialsProvider;
        private HttpRequestConfig httpRequestConfig;

        /// <summary>
        ///  获取证书信息
        ///</summary>
        public override CredentialsProvider CredentialsProvider   { get { return credentialsProvider; } }

        /// <summary>
        ///  获取http 客户端配置信息
        ///</summary>
        public override HttpRequestConfig HttpRequestConfig { get { return httpRequestConfig; } }

        /// <summary>
        ///  获取sdk环境配置信息
        ///</summary>
        public override SDKEnvironment SDKEnvironment { get { return environment; } }

        /// <summary>
        ///  获取用户自定义浏览器识别字符串
        ///</summary>
        public override string UserAgent { get { return userAgent; } }

        /// <summary>
        ///  获取服务名称
        ///</summary>
        public override string ServiceName { get { return serviceName; } }

        /// <summary>
        ///  获取版本号
        ///</summary>
        public override string Version { get { return apiVersion; } }



#if NET40||NET35
        /// <summary>
        /// 修改WAF实例防护配置
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public ModifyCCEngineConfigResponse ModifyCCEngineConfig(ModifyCCEngineConfigRequest request) {
            return  new ModifyCCEngineConfigExecutor().Client(this).Execute<ModifyCCEngineConfigResponse, ModifyCCEngineConfigResult, ModifyCCEngineConfigRequest>(request);
        }
#else
        /// <summary>
        /// 修改WAF实例防护配置
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public async Task<ModifyCCEngineConfigResponse> ModifyCCEngineConfig(ModifyCCEngineConfigRequest request) {
            return await new ModifyCCEngineConfigExecutor().Client(this).Execute<ModifyCCEngineConfigResponse, ModifyCCEngineConfigResult, ModifyCCEngineConfigRequest>(request);
        }
#endif
#if NET40||NET35
        /// <summary>
        /// 修改登录防爆破防护配置
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public ModifyAntibfEngineConfigResponse ModifyAntibfEngineConfig(ModifyAntibfEngineConfigRequest request) {
            return  new ModifyAntibfEngineConfigExecutor().Client(this).Execute<ModifyAntibfEngineConfigResponse, ModifyAntibfEngineConfigResult, ModifyAntibfEngineConfigRequest>(request);
        }
#else
        /// <summary>
        /// 修改登录防爆破防护配置
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public async Task<ModifyAntibfEngineConfigResponse> ModifyAntibfEngineConfig(ModifyAntibfEngineConfigRequest request) {
            return await new ModifyAntibfEngineConfigExecutor().Client(this).Execute<ModifyAntibfEngineConfigResponse, ModifyAntibfEngineConfigResult, ModifyAntibfEngineConfigRequest>(request);
        }
#endif
#if NET40||NET35
        /// <summary>
        /// 修改Web应用防护配置
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public ModifyWafEngineConfigResponse ModifyWafEngineConfig(ModifyWafEngineConfigRequest request) {
            return  new ModifyWafEngineConfigExecutor().Client(this).Execute<ModifyWafEngineConfigResponse, ModifyWafEngineConfigResult, ModifyWafEngineConfigRequest>(request);
        }
#else
        /// <summary>
        /// 修改Web应用防护配置
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public async Task<ModifyWafEngineConfigResponse> ModifyWafEngineConfig(ModifyWafEngineConfigRequest request) {
            return await new ModifyWafEngineConfigExecutor().Client(this).Execute<ModifyWafEngineConfigResponse, ModifyWafEngineConfigResult, ModifyWafEngineConfigRequest>(request);
        }
#endif
#if NET40||NET35
        /// <summary>
        /// 查询WAF实例基本信息
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public DescribeWafResponse DescribeWaf(DescribeWafRequest request) {
            return  new DescribeWafExecutor().Client(this).Execute<DescribeWafResponse, DescribeWafResult, DescribeWafRequest>(request);
        }
#else
        /// <summary>
        /// 查询WAF实例基本信息
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public async Task<DescribeWafResponse> DescribeWaf(DescribeWafRequest request) {
            return await new DescribeWafExecutor().Client(this).Execute<DescribeWafResponse, DescribeWafResult, DescribeWafRequest>(request);
        }
#endif
#if NET40||NET35
        /// <summary>
        /// 查询申请状态
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public DescribeApplyStatusResponse DescribeApplyStatus(DescribeApplyStatusRequest request) {
            return  new DescribeApplyStatusExecutor().Client(this).Execute<DescribeApplyStatusResponse, DescribeApplyStatusResult, DescribeApplyStatusRequest>(request);
        }
#else
        /// <summary>
        /// 查询申请状态
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public async Task<DescribeApplyStatusResponse> DescribeApplyStatus(DescribeApplyStatusRequest request) {
            return await new DescribeApplyStatusExecutor().Client(this).Execute<DescribeApplyStatusResponse, DescribeApplyStatusResult, DescribeApplyStatusRequest>(request);
        }
#endif
#if NET40||NET35
        /// <summary>
        /// 修改WAF实例基本信息,仅支持实例名称和绑定的albId修改
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public ModifyWafResponse ModifyWaf(ModifyWafRequest request) {
            return  new ModifyWafExecutor().Client(this).Execute<ModifyWafResponse, ModifyWafResult, ModifyWafRequest>(request);
        }
#else
        /// <summary>
        /// 修改WAF实例基本信息,仅支持实例名称和绑定的albId修改
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public async Task<ModifyWafResponse> ModifyWaf(ModifyWafRequest request) {
            return await new ModifyWafExecutor().Client(this).Execute<ModifyWafResponse, ModifyWafResult, ModifyWafRequest>(request);
        }
#endif
#if NET40||NET35
        /// <summary>
        /// 修改反爬虫防护配置
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public ModifyAntisdEngineConfigResponse ModifyAntisdEngineConfig(ModifyAntisdEngineConfigRequest request) {
            return  new ModifyAntisdEngineConfigExecutor().Client(this).Execute<ModifyAntisdEngineConfigResponse, ModifyAntisdEngineConfigResult, ModifyAntisdEngineConfigRequest>(request);
        }
#else
        /// <summary>
        /// 修改反爬虫防护配置
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public async Task<ModifyAntisdEngineConfigResponse> ModifyAntisdEngineConfig(ModifyAntisdEngineConfigRequest request) {
            return await new ModifyAntisdEngineConfigExecutor().Client(this).Execute<ModifyAntisdEngineConfigResponse, ModifyAntisdEngineConfigResult, ModifyAntisdEngineConfigRequest>(request);
        }
#endif
#if NET40||NET35
        /// <summary>
        /// 申请使用应用安全网关
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public ApplyResponse Apply(ApplyRequest request) {
            return  new ApplyExecutor().Client(this).Execute<ApplyResponse, ApplyResult, ApplyRequest>(request);
        }
#else
        /// <summary>
        /// 申请使用应用安全网关
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public async Task<ApplyResponse> Apply(ApplyRequest request) {
            return await new ApplyExecutor().Client(this).Execute<ApplyResponse, ApplyResult, ApplyRequest>(request);
        }
#endif
#if NET40||NET35
        /// <summary>
        /// 修改WAF工作状态
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public ModifyWafActionResponse ModifyWafAction(ModifyWafActionRequest request) {
            return  new ModifyWafActionExecutor().Client(this).Execute<ModifyWafActionResponse, ModifyWafActionResult, ModifyWafActionRequest>(request);
        }
#else
        /// <summary>
        /// 修改WAF工作状态
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public async Task<ModifyWafActionResponse> ModifyWafAction(ModifyWafActionRequest request) {
            return await new ModifyWafActionExecutor().Client(this).Execute<ModifyWafActionResponse, ModifyWafActionResult, ModifyWafActionRequest>(request);
        }
#endif
#if NET40||NET35
        /// <summary>
        /// 查询WAF实例列表
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public DescribeWafsResponse DescribeWafs(DescribeWafsRequest request) {
            return  new DescribeWafsExecutor().Client(this).Execute<DescribeWafsResponse, DescribeWafsResult, DescribeWafsRequest>(request);
        }
#else
        /// <summary>
        /// 查询WAF实例列表
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public async Task<DescribeWafsResponse> DescribeWafs(DescribeWafsRequest request) {
            return await new DescribeWafsExecutor().Client(this).Execute<DescribeWafsResponse, DescribeWafsResult, DescribeWafsRequest>(request);
        }
#endif
#if NET40||NET35
        /// <summary>
        /// 修改自定义防护规则
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public ModifyUserConfigResponse ModifyUserConfig(ModifyUserConfigRequest request) {
            return  new ModifyUserConfigExecutor().Client(this).Execute<ModifyUserConfigResponse, ModifyUserConfigResult, ModifyUserConfigRequest>(request);
        }
#else
        /// <summary>
        /// 修改自定义防护规则
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public async Task<ModifyUserConfigResponse> ModifyUserConfig(ModifyUserConfigRequest request) {
            return await new ModifyUserConfigExecutor().Client(this).Execute<ModifyUserConfigResponse, ModifyUserConfigResult, ModifyUserConfigRequest>(request);
        }
#endif
#if NET40||NET35
        /// <summary>
        /// 查询今日攻击事件分布图数据
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public DescribeTodayAttacksResponse DescribeTodayAttacks(DescribeTodayAttacksRequest request) {
            return  new DescribeTodayAttacksExecutor().Client(this).Execute<DescribeTodayAttacksResponse, DescribeTodayAttacksResult, DescribeTodayAttacksRequest>(request);
        }
#else
        /// <summary>
        /// 查询今日攻击事件分布图数据
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public async Task<DescribeTodayAttacksResponse> DescribeTodayAttacks(DescribeTodayAttacksRequest request) {
            return await new DescribeTodayAttacksExecutor().Client(this).Execute<DescribeTodayAttacksResponse, DescribeTodayAttacksResult, DescribeTodayAttacksRequest>(request);
        }
#endif
#if NET40||NET35
        /// <summary>
        /// 创建WAF实例
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public CreateWafResponse CreateWaf(CreateWafRequest request) {
            return  new CreateWafExecutor().Client(this).Execute<CreateWafResponse, CreateWafResult, CreateWafRequest>(request);
        }
#else
        /// <summary>
        /// 创建WAF实例
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public async Task<CreateWafResponse> CreateWaf(CreateWafRequest request) {
            return await new CreateWafExecutor().Client(this).Execute<CreateWafResponse, CreateWafResult, CreateWafRequest>(request);
        }
#endif
#if NET40||NET35
        /// <summary>
        /// 停用WAF实例
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public DisableWafInstanceResponse DisableWafInstance(DisableWafInstanceRequest request) {
            return  new DisableWafInstanceExecutor().Client(this).Execute<DisableWafInstanceResponse, DisableWafInstanceResult, DisableWafInstanceRequest>(request);
        }
#else
        /// <summary>
        /// 停用WAF实例
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public async Task<DisableWafInstanceResponse> DisableWafInstance(DisableWafInstanceRequest request) {
            return await new DisableWafInstanceExecutor().Client(this).Execute<DisableWafInstanceResponse, DisableWafInstanceResult, DisableWafInstanceRequest>(request);
        }
#endif
#if NET40||NET35
        /// <summary>
        /// 查询WAF实例的防护配置
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public DescribeWafConfigResponse DescribeWafConfig(DescribeWafConfigRequest request) {
            return  new DescribeWafConfigExecutor().Client(this).Execute<DescribeWafConfigResponse, DescribeWafConfigResult, DescribeWafConfigRequest>(request);
        }
#else
        /// <summary>
        /// 查询WAF实例的防护配置
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public async Task<DescribeWafConfigResponse> DescribeWafConfig(DescribeWafConfigRequest request) {
            return await new DescribeWafConfigExecutor().Client(this).Execute<DescribeWafConfigResponse, DescribeWafConfigResult, DescribeWafConfigRequest>(request);
        }
#endif
#if NET40||NET35
        /// <summary>
        /// 查询CC攻击防护趋势
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public DescribeCCDataTrendResponse DescribeCCDataTrend(DescribeCCDataTrendRequest request) {
            return  new DescribeCCDataTrendExecutor().Client(this).Execute<DescribeCCDataTrendResponse, DescribeCCDataTrendResult, DescribeCCDataTrendRequest>(request);
        }
#else
        /// <summary>
        /// 查询CC攻击防护趋势
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public async Task<DescribeCCDataTrendResponse> DescribeCCDataTrend(DescribeCCDataTrendRequest request) {
            return await new DescribeCCDataTrendExecutor().Client(this).Execute<DescribeCCDataTrendResponse, DescribeCCDataTrendResult, DescribeCCDataTrendRequest>(request);
        }
#endif
#if NET40||NET35
        /// <summary>
        /// 删除自定义防护规则
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public DeleteUserConfigResponse DeleteUserConfig(DeleteUserConfigRequest request) {
            return  new DeleteUserConfigExecutor().Client(this).Execute<DeleteUserConfigResponse, DeleteUserConfigResult, DeleteUserConfigRequest>(request);
        }
#else
        /// <summary>
        /// 删除自定义防护规则
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public async Task<DeleteUserConfigResponse> DeleteUserConfig(DeleteUserConfigRequest request) {
            return await new DeleteUserConfigExecutor().Client(this).Execute<DeleteUserConfigResponse, DeleteUserConfigResult, DeleteUserConfigRequest>(request);
        }
#endif
#if NET40||NET35
        /// <summary>
        /// 查询自定义访问控制规则防御事件分布
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public DescribeACLDataTrendResponse DescribeACLDataTrend(DescribeACLDataTrendRequest request) {
            return  new DescribeACLDataTrendExecutor().Client(this).Execute<DescribeACLDataTrendResponse, DescribeACLDataTrendResult, DescribeACLDataTrendRequest>(request);
        }
#else
        /// <summary>
        /// 查询自定义访问控制规则防御事件分布
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public async Task<DescribeACLDataTrendResponse> DescribeACLDataTrend(DescribeACLDataTrendRequest request) {
            return await new DescribeACLDataTrendExecutor().Client(this).Execute<DescribeACLDataTrendResponse, DescribeACLDataTrendResult, DescribeACLDataTrendRequest>(request);
        }
#endif
#if NET40||NET35
        /// <summary>
        /// 查询自定义防护规则
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public DescribeUserConfigResponse DescribeUserConfig(DescribeUserConfigRequest request) {
            return  new DescribeUserConfigExecutor().Client(this).Execute<DescribeUserConfigResponse, DescribeUserConfigResult, DescribeUserConfigRequest>(request);
        }
#else
        /// <summary>
        /// 查询自定义防护规则
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public async Task<DescribeUserConfigResponse> DescribeUserConfig(DescribeUserConfigRequest request) {
            return await new DescribeUserConfigExecutor().Client(this).Execute<DescribeUserConfigResponse, DescribeUserConfigResult, DescribeUserConfigRequest>(request);
        }
#endif
#if NET40||NET35
        /// <summary>
        /// 查询攻击信息-CC攻击(当前仅支持查询7天内的攻击日志)
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public DescribeWafCCsResponse DescribeWafCCs(DescribeWafCCsRequest request) {
            return  new DescribeWafCCsExecutor().Client(this).Execute<DescribeWafCCsResponse, DescribeWafCCsResult, DescribeWafCCsRequest>(request);
        }
#else
        /// <summary>
        /// 查询攻击信息-CC攻击(当前仅支持查询7天内的攻击日志)
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public async Task<DescribeWafCCsResponse> DescribeWafCCs(DescribeWafCCsRequest request) {
            return await new DescribeWafCCsExecutor().Client(this).Execute<DescribeWafCCsResponse, DescribeWafCCsResult, DescribeWafCCsRequest>(request);
        }
#endif
#if NET40||NET35
        /// <summary>
        /// 启用WAF实例
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public EnableWafInstanceResponse EnableWafInstance(EnableWafInstanceRequest request) {
            return  new EnableWafInstanceExecutor().Client(this).Execute<EnableWafInstanceResponse, EnableWafInstanceResult, EnableWafInstanceRequest>(request);
        }
#else
        /// <summary>
        /// 启用WAF实例
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public async Task<EnableWafInstanceResponse> EnableWafInstance(EnableWafInstanceRequest request) {
            return await new EnableWafInstanceExecutor().Client(this).Execute<EnableWafInstanceResponse, EnableWafInstanceResult, EnableWafInstanceRequest>(request);
        }
#endif
#if NET40||NET35
        /// <summary>
        /// 删除WAF实例，支持批量删除，多个instanceId以&#39;,&#39;隔开
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public DeleteWafResponse DeleteWaf(DeleteWafRequest request) {
            return  new DeleteWafExecutor().Client(this).Execute<DeleteWafResponse, DeleteWafResult, DeleteWafRequest>(request);
        }
#else
        /// <summary>
        /// 删除WAF实例，支持批量删除，多个instanceId以&#39;,&#39;隔开
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public async Task<DeleteWafResponse> DeleteWaf(DeleteWafRequest request) {
            return await new DeleteWafExecutor().Client(this).Execute<DeleteWafResponse, DeleteWafResult, DeleteWafRequest>(request);
        }
#endif
#if NET40||NET35
        /// <summary>
        /// 修改恶意IP封禁防护配置
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public ModifyMaliciousIPEngineConfigResponse ModifyMaliciousIPEngineConfig(ModifyMaliciousIPEngineConfigRequest request) {
            return  new ModifyMaliciousIPEngineConfigExecutor().Client(this).Execute<ModifyMaliciousIPEngineConfigResponse, ModifyMaliciousIPEngineConfigResult, ModifyMaliciousIPEngineConfigRequest>(request);
        }
#else
        /// <summary>
        /// 修改恶意IP封禁防护配置
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public async Task<ModifyMaliciousIPEngineConfigResponse> ModifyMaliciousIPEngineConfig(ModifyMaliciousIPEngineConfigRequest request) {
            return await new ModifyMaliciousIPEngineConfigExecutor().Client(this).Execute<ModifyMaliciousIPEngineConfigResponse, ModifyMaliciousIPEngineConfigResult, ModifyMaliciousIPEngineConfigRequest>(request);
        }
#endif
#if NET40||NET35
        /// <summary>
        /// 创建自定义防护规则
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public CreateUserConfigResponse CreateUserConfig(CreateUserConfigRequest request) {
            return  new CreateUserConfigExecutor().Client(this).Execute<CreateUserConfigResponse, CreateUserConfigResult, CreateUserConfigRequest>(request);
        }
#else
        /// <summary>
        /// 创建自定义防护规则
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public async Task<CreateUserConfigResponse> CreateUserConfig(CreateUserConfigRequest request) {
            return await new CreateUserConfigExecutor().Client(this).Execute<CreateUserConfigResponse, CreateUserConfigResult, CreateUserConfigRequest>(request);
        }
#endif
#if NET40||NET35
        /// <summary>
        /// 查询访问安全趋势
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public DescribeQPSDataTrendResponse DescribeQPSDataTrend(DescribeQPSDataTrendRequest request) {
            return  new DescribeQPSDataTrendExecutor().Client(this).Execute<DescribeQPSDataTrendResponse, DescribeQPSDataTrendResult, DescribeQPSDataTrendRequest>(request);
        }
#else
        /// <summary>
        /// 查询访问安全趋势
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public async Task<DescribeQPSDataTrendResponse> DescribeQPSDataTrend(DescribeQPSDataTrendRequest request) {
            return await new DescribeQPSDataTrendExecutor().Client(this).Execute<DescribeQPSDataTrendResponse, DescribeQPSDataTrendResult, DescribeQPSDataTrendRequest>(request);
        }
#endif
#if NET40||NET35
        /// <summary>
        /// 查询攻击信息-访问控制攻击(当前仅支持查询7天内的攻击日志)
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public DescribeWafACLsResponse DescribeWafACLs(DescribeWafACLsRequest request) {
            return  new DescribeWafACLsExecutor().Client(this).Execute<DescribeWafACLsResponse, DescribeWafACLsResult, DescribeWafACLsRequest>(request);
        }
#else
        /// <summary>
        /// 查询攻击信息-访问控制攻击(当前仅支持查询7天内的攻击日志)
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public async Task<DescribeWafACLsResponse> DescribeWafACLs(DescribeWafACLsRequest request) {
            return await new DescribeWafACLsExecutor().Client(this).Execute<DescribeWafACLsResponse, DescribeWafACLsResult, DescribeWafACLsRequest>(request);
        }
#endif
#if NET40||NET35
        /// <summary>
        /// 查询WAF实例价格
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public DescribeWafPriceResponse DescribeWafPrice(DescribeWafPriceRequest request) {
            return  new DescribeWafPriceExecutor().Client(this).Execute<DescribeWafPriceResponse, DescribeWafPriceResult, DescribeWafPriceRequest>(request);
        }
#else
        /// <summary>
        /// 查询WAF实例价格
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public async Task<DescribeWafPriceResponse> DescribeWafPrice(DescribeWafPriceRequest request) {
            return await new DescribeWafPriceExecutor().Client(this).Execute<DescribeWafPriceResponse, DescribeWafPriceResult, DescribeWafPriceRequest>(request);
        }
#endif
#if NET40||NET35
        /// <summary>
        /// 查询还未绑定Waf实例的负载均衡实例Id,仅返回申请试用审批通过之后创建的lb
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public DescribeLBServerIdsResponse DescribeLBServerIds(DescribeLBServerIdsRequest request) {
            return  new DescribeLBServerIdsExecutor().Client(this).Execute<DescribeLBServerIdsResponse, DescribeLBServerIdsResult, DescribeLBServerIdsRequest>(request);
        }
#else
        /// <summary>
        /// 查询还未绑定Waf实例的负载均衡实例Id,仅返回申请试用审批通过之后创建的lb
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public async Task<DescribeLBServerIdsResponse> DescribeLBServerIds(DescribeLBServerIdsRequest request) {
            return await new DescribeLBServerIdsExecutor().Client(this).Execute<DescribeLBServerIdsResponse, DescribeLBServerIdsResult, DescribeLBServerIdsRequest>(request);
        }
#endif
#if NET40||NET35
        /// <summary>
        /// 查询最近攻击事件趋势
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public DescribeAttackTrendResponse DescribeAttackTrend(DescribeAttackTrendRequest request) {
            return  new DescribeAttackTrendExecutor().Client(this).Execute<DescribeAttackTrendResponse, DescribeAttackTrendResult, DescribeAttackTrendRequest>(request);
        }
#else
        /// <summary>
        /// 查询最近攻击事件趋势
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public async Task<DescribeAttackTrendResponse> DescribeAttackTrend(DescribeAttackTrendRequest request) {
            return await new DescribeAttackTrendExecutor().Client(this).Execute<DescribeAttackTrendResponse, DescribeAttackTrendResult, DescribeAttackTrendRequest>(request);
        }
#endif
#if NET40||NET35
        /// <summary>
        /// 查询用户自定义防护配置列表
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public DescribeUserConfigsResponse DescribeUserConfigs(DescribeUserConfigsRequest request) {
            return  new DescribeUserConfigsExecutor().Client(this).Execute<DescribeUserConfigsResponse, DescribeUserConfigsResult, DescribeUserConfigsRequest>(request);
        }
#else
        /// <summary>
        /// 查询用户自定义防护配置列表
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public async Task<DescribeUserConfigsResponse> DescribeUserConfigs(DescribeUserConfigsRequest request) {
            return await new DescribeUserConfigsExecutor().Client(this).Execute<DescribeUserConfigsResponse, DescribeUserConfigsResult, DescribeUserConfigsRequest>(request);
        }
#endif
#if NET40||NET35
        /// <summary>
        /// 提交订单
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public SubmitNewOrderResponse SubmitNewOrder(SubmitNewOrderRequest request) {
            return  new SubmitNewOrderExecutor().Client(this).Execute<SubmitNewOrderResponse, SubmitNewOrderResult, SubmitNewOrderRequest>(request);
        }
#else
        /// <summary>
        /// 提交订单
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public async Task<SubmitNewOrderResponse> SubmitNewOrder(SubmitNewOrderRequest request) {
            return await new SubmitNewOrderExecutor().Client(this).Execute<SubmitNewOrderResponse, SubmitNewOrderResult, SubmitNewOrderRequest>(request);
        }
#endif
#if NET40||NET35
        /// <summary>
        /// 查询攻击信息-Web应用攻击(当前仅支持查询7天内的攻击日志)
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public DescribeWafVulsResponse DescribeWafVuls(DescribeWafVulsRequest request) {
            return  new DescribeWafVulsExecutor().Client(this).Execute<DescribeWafVulsResponse, DescribeWafVulsResult, DescribeWafVulsRequest>(request);
        }
#else
        /// <summary>
        /// 查询攻击信息-Web应用攻击(当前仅支持查询7天内的攻击日志)
        /// </summary>
        /// <param name="request">请求参数信息</param>
        /// <returns>请求结果信息</returns>
        public async Task<DescribeWafVulsResponse> DescribeWafVuls(DescribeWafVulsRequest request) {
            return await new DescribeWafVulsExecutor().Client(this).Execute<DescribeWafVulsResponse, DescribeWafVulsResult, DescribeWafVulsRequest>(request);
        }
#endif

            /// <summary>
            ///  默认VpcwafClient 构造器 接口
            ///</summary>
            public interface Builder
            {

                /// <summary>
                /// 设置认证信息参数
                /// </summary>
                /// <param name="provider">认证信息提供对象</param>
                /// <returns>vpcwafClient 构造器</returns>
                Builder CredentialsProvider(CredentialsProvider provider);

                /// <summary>
                /// 设置请求环境参数
                /// </summary>
                /// <param name="environment">环境参数信息</param>
                /// <returns>vpcwafClient 构造器</returns>
                Builder Environment(Core.Client.SDKEnvironment environment);

                /// <summary>
                /// http 请求配置信息
                /// </summary>
                /// <param name="config">http 请求配置信息</param>
                /// <returns>vpcwafClient 构造器</returns>
                Builder HttpRequestConfig(HttpRequestConfig config);

                /// <summary>
                ///  构造VpcwafClient 对象
                ///</summary>
                VpcwafClient Build();
            }

            /// <summary>
            ///  默认VpcwafClient 构造器
            ///</summary>
            public class DefaultBuilder : Builder
            {
                /// <summary>
                /// VpcwafClient service client
                /// </summary>
                private  VpcwafClient vpcwafClient;

                /// <summary>
                ///  默认VpcwafClient 构造器构造对象
                ///</summary>
                public DefaultBuilder()
                {
                    vpcwafClient = new VpcwafClient();
                }

                /// <summary>
                ///  构造VpcwafClient 对象
                ///</summary>
                public VpcwafClient Build()
                {
                    if (vpcwafClient.CredentialsProvider == null)
                    {
                        //if credentialsProvider not set, try load jdcloud global default  credentials provider
                        vpcwafClient.credentialsProvider = JdCloud.DefaultInstance.GetCredentialsProvider();
                        if (vpcwafClient.credentialsProvider == null)
                        {
                            throw new ArgumentNullException("VpcwafClient build error: jdcloud credentials provider not set");
                        }
                    }
                    if (vpcwafClient.HttpRequestConfig == null)
                    {
                        vpcwafClient.httpRequestConfig = JdCloud.DefaultInstance.GetHttpRequestConfig();
                        if (vpcwafClient.httpRequestConfig == null)
                        {
                        throw new ArgumentNullException("VpcwafClient build error: http request config not set");
                        }
                    }
                    return vpcwafClient;
                }

                /// <summary>
                /// 设置认证信息参数
                /// </summary>
                /// <param name="provider">认证信息提供对象</param>
                /// <returns>vpcwafClient 构造器</returns>
                public Builder CredentialsProvider(CredentialsProvider provider)
                {
                    vpcwafClient.credentialsProvider = provider;
                    return this;
                }

                /// <summary>
                /// 设置请求环境参数
                /// </summary>
                /// <param name="environment">环境参数信息</param>
                /// <returns>vpcwafClient 构造器</returns>
                public Builder Environment(SDKEnvironment environment)
                {
                    vpcwafClient.environment = environment;
                    return this;
                }

                /// <summary>
                /// http 请求配置信息
                /// </summary>
                /// <param name="config">http 请求配置信息</param>
                /// <returns>vpcwafClient 构造器</returns>
                public Builder HttpRequestConfig(HttpRequestConfig config)
                {
                    vpcwafClient.httpRequestConfig = config;
                    return this;
                }
            }
    }
}
