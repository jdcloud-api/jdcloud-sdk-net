/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */


using System;
using System.Collections.Generic;
using System.Text;


namespace JDCloudSDK.Pod.Model
{

    /// <summary>
    ///  容器探活方式。
    /// </summary>
    public class ProbeSpec
    {

        ///<summary>
        /// 容器启动多长时间后，触发探针。默认值：10秒；范围:[0-300]
        ///</summary>
        public int? InitialDelaySeconds{ get; set; }
        ///<summary>
        /// 探测的时间间隔。默认值 10秒，范围:[1-300]
        ///</summary>
        public int? PeriodSeconds{ get; set; }
        ///<summary>
        /// 探测的超时时间。默认值 1秒；范围:[1-300]
        ///</summary>
        public int? TimeoutSeconds{ get; set; }
        ///<summary>
        /// 在成功状态后，连续探活失败的次数，认为探活失败。默认值 3次；范围 1-10
        ///</summary>
        public int? FailureThreshold{ get; set; }
        ///<summary>
        /// 在失败状态后，连续探活成功的次数，认为探活成功。默认值 1次；范围 1-10
        ///</summary>
        public int? SuccessThreshold{ get; set; }
        ///<summary>
        /// 在容器内执行指定命令；如果命令退出时返回码为 0 则认为诊断成功。
        ///</summary>
        public Exec Exec{ get; set; }
        ///<summary>
        /// 对指定的端口和路径上的容器的 IP 地址执行 HTTP Get 请求。&lt;br&gt;
        /// 如果响应的状态码大于等于200 且小于 400，则诊断被认为是成功的。 
        /// 
        ///</summary>
        public Hg HttpGet{ get; set; }
        ///<summary>
        /// 对指定端口上的容器的 IP 地址进行 TCP 检查；如果端口打开，则诊断被认为是成功的。
        ///</summary>
        public TcpSocketSpec TcpSocket{ get; set; }
    }
}
