/*
 * Copyright 2018 JDCLOUD.COM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http:#www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * 
 *
 * 
 * Contact: 
 *
 * NOTE: This class is auto generated by the jdcloud code generator program.
 */


using System;
using System.Collections.Generic;
using System.Text;


namespace JDCloudSDK.Ipanti.Model
{

    /// <summary>
    ///  webRule
    /// </summary>
    public class WebRule
    {

        ///<summary>
        /// 规则 Id
        ///</summary>
        public long? Id{ get; set; }
        ///<summary>
        /// 实例 Id
        ///</summary>
        public long? InstanceId{ get; set; }
        ///<summary>
        /// 子域名
        ///</summary>
        public string Domain{ get; set; }
        ///<summary>
        /// 规则的 cname
        ///</summary>
        public string Cname{ get; set; }
        ///<summary>
        /// Protocol
        ///</summary>
        public WebRuleProtocol Protocol{ get; set; }
        ///<summary>
        /// 是否为自定义端口号, 0: 为默认, 1: 为自定义
        ///</summary>
        public int? CustomPortStatus{ get; set; }
        ///<summary>
        /// HTTP 协议的端口号, 如 80,81
        ///</summary>
        public List<int?> Port{ get; set; }
        ///<summary>
        /// HTTPS 协议的端口号, 如 443,8443
        ///</summary>
        public List<int?> HttpsPort{ get; set; }
        ///<summary>
        /// 是否开启 http 回源, 0: 为不开启, 1: 为开启, 当勾选 HTTPS 时可以配置该属性
        ///</summary>
        public int? HttpOrigin{ get; set; }
        ///<summary>
        /// 0: 防御状态, 1: 回源状态
        ///</summary>
        public int? Status{ get; set; }
        ///<summary>
        /// 回源类型: A 或者 CNAME
        ///</summary>
        public string OriginType{ get; set; }
        ///<summary>
        /// OriginAddr
        ///</summary>
        public List<OriginAddrItem> OriginAddr{ get; set; }
        ///<summary>
        /// 回源域名, originType 为 CNAME 时返回该字段
        ///</summary>
        public string OriginDomain{ get; set; }
        ///<summary>
        /// OnlineAddr
        ///</summary>
        public List<string> OnlineAddr{ get; set; }
        ///<summary>
        /// 证书状态, 0: 异常, 1: 正常, 2: 证书未上传
        ///</summary>
        public int? HttpCertStatus{ get; set; }
        ///<summary>
        /// 证书 Id
        ///</summary>
        public long? CertId{ get; set; }
        ///<summary>
        /// 证书名称
        ///</summary>
        public string CertName{ get; set; }
        ///<summary>
        /// 证书内容
        ///</summary>
        public string HttpsCertContent{ get; set; }
        ///<summary>
        /// 证书私钥
        ///</summary>
        public string HttpsRsaKey{ get; set; }
        ///<summary>
        /// 是否开启https强制跳转, 当 protocol 为 HTTP_HTTPS 时可以配置该属性
        ///   - 0 不强跳
        ///   - 1 开启强跳
        /// 
        ///</summary>
        public int? ForceJump{ get; set; }
        ///<summary>
        /// 转发规则,  wrr: 带权重的轮询, rr: 不带权重的轮询
        ///</summary>
        public string Algorithm{ get; set; }
        ///<summary>
        /// CC 状态, 0: CC 关闭, 1: CC 开启
        ///</summary>
        public int? CcStatus{ get; set; }
        ///<summary>
        /// webSocketStatus, 0: 关闭, 1: 开启
        ///</summary>
        public int? WebSocketStatus{ get; set; }
    }
}
